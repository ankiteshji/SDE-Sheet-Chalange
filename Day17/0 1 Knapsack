from math import inf
inf=float('inf')
def solve(ind,w,values,weights,dp):

    if ind==0:
        if weights[ind]<=w:
            return values[ind]
        else:
            return 0
    if dp[ind][w]!=-1:
        return dp[ind][w]


    notpick=solve(ind-1,w,values,weights,dp)
    pick=-inf
    if weights[ind]<=w:
        pick=values[ind]+solve(ind-1,w-weights[ind],values,weights,dp)
    dp[ind][w]= max(pick,notpick)

    return dp[ind][w]


def maxProfit(values, weights, n, w):

    # Write your code here
    dp=[[-1 for _ in range(1+w)]for _ in range(n)]
    return solve(n-1,w,values,weights,dp)

    
