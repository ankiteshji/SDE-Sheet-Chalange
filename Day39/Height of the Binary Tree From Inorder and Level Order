from os import *
from sys import *
from collections import *
from math import *

import sys
sys.setrecursionlimit(10**7)
class Node:
	height=0
	leftind=-1
	rightind=-1
	

def heightOfTheTree(inorder, levelOrder, N):	
	
	start=Node()
	start.height=0
	start.leftind=0
	start.rightind=N-1
	q=[start]
	inMap={item:i for i,item in enumerate(inorder)}
	maHeight=0
	for i in range(N):
		curr=levelOrder[i]
		now=q.pop(0)
		currpos=inMap[curr]
		
		if currpos> now.leftind:
			new=Node()
			new.height=now.height+1
			maHeight=max(maHeight,new.height)
			
			new.leftind=now.leftind
			new.rightind=currpos-1
			q.append(new)
		if currpos<now.rightind:
			new=Node()
			new.height=now.height+1
			maHeight=max(maHeight,new.height)
			new.leftind=currpos+1
			new.rightind=now.rightind
			q.append(new)
	return maHeight
		
# Taking input.
def takeInput() :
	n = int(input().strip())
	inorder = list(map(int, sys.stdin.readline().strip().split(" ")))
	levelOrder = list(map(int, sys.stdin.readline().strip().split(" ")))
	return n, inorder, levelOrder

# Main.
t = int(input().strip())
for i in range(t):
	n, inorder, levelOrder = takeInput()
	print(heightOfTheTree(inorder, levelOrder, n))
