from os import *
from sys import *
from collections import *
from math import *



class LFUCache:

    def __init__(self, capacity: int):
        # Implement the constructor here
        self.cache={}
        self.capacity=capacity
        self.order=[]
        
    def get(self, key: int) -> int:
        # Implement the get function here
        if key in self.cache:
            self.order.remove(key)
            self.order.append(key)
            return self.cache[key]
        else:
            return -1

    def put(self, key: int, value: int) -> None:
        # Implement the put function here
        if key in self.cache:
            self.order.remove(key)
        elif len(self.cache)==self.capacity:
            unused=self.order.pop(0)
            del self.cache[unused]
        
        self.cache[key]=value
        self.order.append(key)


