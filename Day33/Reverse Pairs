def merge(nums, start, mid, end):
    n1 = (mid - start) + 1
    n2 = end - mid
    left = [0] * n1
    right = [0] * n2
    
    for i in range(n1):
        left[i] = nums[start + i]
        
    for j in range(n2):
        right[j] = nums[mid + 1 + j]
        
    i, j = 0, 0
    
    for k in range(start, end + 1):
        if j >= n2 or (i < n1 and left[i] <= right[j]):
            nums[k] = left[i]
            i += 1
        else:
            nums[k] = right[j]
            j += 1

def mergeSort(nums, start, end):
    if start < end:
        mid = (start + end)//2
        count = mergeSort(nums, start, mid) + mergeSort(nums, mid + 1, end)
        j = mid + 1
        
        for i in range(start, mid + 1):
            while j <= end and nums[i] > nums[j] * 2:
                j += 1
            count += j - (mid + 1)
        merge(nums, start, mid, end)
        return count 
    
    else:
        return 0

def reversePairs(arr, n):
    return mergeSort(arr, 0, n - 1)
