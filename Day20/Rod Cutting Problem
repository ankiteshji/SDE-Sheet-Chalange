from sys import stdin
import sys

def cutRod(price, n):
    dp=[[0 for _ in range(1+n)]for _ in range(n)]
    
    for curr in range(n+1):
        dp[0][curr]=price[0]*curr
    
    for ind in range(1,n):
        for curr in range(1+n):
            notpick=dp[ind-1][curr]
            pick=0
            rod_length=ind+1
            if rod_length<=curr:
                
                pick=price[ind]+dp[ind][curr-rod_length]
            dp[ind][curr]= max(pick,notpick)
            
    
    return dp[-1][n]

    

# Taking input using fast I/O.
def takeInput():
    n = int(input())

    price = list(map(int, input().strip().split(" ")))

    return price, n


# Main.
t = int(input())
while t:
    price, n = takeInput()
    print(cutRod(price, n))
    t = t-1
