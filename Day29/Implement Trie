from sys import stdin,setrecursionlimit
setrecursionlimit(10**7)
class TrieNode:
    def __init__(self):
        self.links=[None]*26
        self.flag=False
    def isContainKey(self,char):
        self.char=char
        
        return self.links[ord(char)-ord("a")]!=None
    def get(self,char):

        return self.links[ord(char)-ord("a")]
    
    def put(self,char,node):

        self.links[ord(char) - ord('a')] = node
    def setEnd(self):
        self.flag=True
    
    def isEnd(self):
        return self.flag


class Trie :

    def __init__(self) :
        self.root= TrieNode()
    
    def insert(self, string) :
        self.string=string
        node=self.root

        for char in self.string:
            if not node.isContainKey(char):
                node.put(char,TrieNode())
            node=node.get(char)
        node.setEnd()
    
    def search(self, word) :
        node=self.root

        for char in word:
            if not node.isContainKey(char):
                return False
            node=node.get(char)
        if node.isEnd():
            return True
        return False
        
    def startWith(self, prefix) :
        node=self.root

        for char in prefix:
            if not node.isContainKey(char):
                return False
            node=node.get(char)
        return True





# main
t = int(input().strip())
root = Trie()
for i in range(t) :

    q_str = stdin.readline().strip().split(" ")
    q = int(q_str[0].strip())
    str1 = q_str[1].strip()

    if(q == 1) :
        root.insert(str1)
    
    elif (q == 2) :
        if(root.search(str1)) :
            print("true") 

        else :
            print("false")
        
    else :
        if(root.startWith(str1)) :
            print("true")

        else :
            print("false")

